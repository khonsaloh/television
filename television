#!/usr/bin/env bash

dep_ck () {
	for dep in "$@"; do
		command -v "$dep" >/dev/null \
			|| { printf '%s\n' "$dep not found. Please install it."; exit 2; }
	done
}
dep_ck "fzf" "sed" "curl" "jq" "mpv" "awk" "grep"

y="\033[1;33m"
re="\033[0m"
main_url="https://iptv-org.github.io/iptv/channels.json"
location='/usr/local/bin'
# History=0
# hide_win=1
menu="fzf -e -i --reverse --cycle"


# allow custom variables in configuration file
[ -f "$HOME"/.config/television ] && . "$HOME"/.config/television

help() {
printf '%s\n' "options for $0:"
printf '%b\n' " ${y}-r${re}\\tfor radio"
printf '%b\n' " ${y}-d${re}\\tfor download the m3u file"
printf '%b\n' " ${y}-l${re}\\tfor playlists, (pressing p will give you a menu)"
printf '%b\n' " ${y}-e${re}\\tfor channels focused on spanish language"
printf '%b\n' " ${y}-u${re}\\tfor update this script" 
}

update () {
url='https://raw.githubusercontent.com/khonsaloh/television/master/television'
command -v doas >/dev/null && auth=doas
command -v sudo >/dev/null && auth=sudo
$auth curl --progress-bar -sL $url -o $location/"${url##*/}"
$auth chmod +x $location/"${url##*/}"
}

hide_win () {
	vent=$(xdotool getactivewindow) \
		&& xdotool windowunmap $vent
	"$@"
	xdotool windowmap $vent
}

export -f hide_win
command -v xdotool >/dev/null && export hide=hide_win

case $1 in
	-r)
		url=$(curl -Lsf  'https://www.tdtchannels.com/lists/radio.w3u' \
			| jq -r '(.groups[].stations[] | [.name, .url]) | @csv')
		while :; do
			selection=$(printf '%s\n' "$url" | column -t -s',' | tr -d '"' \
				| $menu --with-nth="1..-2" --prompt='radio: ')
			o_url=$(echo "$selection" | awk '{print $NF}')
			[ -z "$selection" ] && exit \
				||  mpv $o_url --force-media-title="${selection%%  *}"
		done
		;;
	
	-d) 
		url=$(curl -Lsf 'https://raw.githubusercontent.com/iptv-org/iptv/master/README.md' \
		| grep -o -P '(?<=code>).*(?=</code)' | sed 's/<.*//' \
		| $menu --prompt='television: ') \
		&& curl -sfL $url -O ;;
	
	-l) 
		curl -Lsf https://raw.githubusercontent.com/iptv-org/iptv/master/README.md \
			| grep -o -P '(?<=code>).*(?=</code)' | sed 's/<.*//' >/tmp/iptv_categories
		while :; do
			rec="$(cut -f2- /tmp/iptv_categories | awk -F'/' '{print $(NF-1),$NF}' \
				| sort | $menu | cut -d' ' -f2 | cut -d'.' -f1)"
			url=$(grep "$rec.m3u$" /tmp/iptv_categories)
			[ -z "$rec" ] && exit
			$hide mpv --script=./plugins/playlistmanager.lua \
				--use-filedir-conf=yes "$url"
		done 
		;;
	-e)
		url=$(curl -Lsf  'https://www.tdtchannels.com/lists/tv.w3u' \
			| jq -r '(.groups[].stations[] | [.name, .url]) | @csv')
		while :; do
			selection=$(printf '%s\n' "$url" | column -t -s',' | tr -d '"' | grep '.m3u8$\|live$' \
				| $menu --with-nth="1..-2" --prompt='television: ')
			[ -z "$selection" ] && exit \
				|| $hide mpv "${selection##* }" --force-media-title="${selection%%  *}"
		done
		;;

	 # -G) 
		# a="$(curl -Lsf https://iptv-org.github.io/iptv/channels.json \
	 # 	| jq -r '["CANAL","ENLACE"], ["----","------"], (.[] | [.name, .url]) | @csv' \
		# | $menu  | awk '{print $NF}')"
		# [ -n "$a" ] && ffmpeg -i "$a" -c copy /tmp/out.ts; mpv /tmp/out.ts
		# ;;
	 -u) 
		tele=$(command -v television)
		url="$(curl -sL 'https://raw.githubusercontent.com/khonsaloh/television/master/television')"
		diff -q "$tele" <(echo "$url") >/dev/null \
		 	&& printf '%s\n' "there is no updates" || update
		;;
	
	*) [ -n "$1" ] && help ;;
esac


[ -n "$1" ] && exit


CHANNELS_LIST=$(curl -sL "$main_url" \
	| jq -r '.[] | "\(.name) \t \(.categories[].name // "N/A") \t \(.languages|.[0].name // "N/A") \t \(.countries|.[0].name // "N/A") \t \(.url)"' |\
	                gawk -v max="${COLUMNS:-80}" 'BEGIN { RS="\n"; FS=" \t " }
                    {
	               name = substr(gensub(/[0-9]+\.\s*(.*)/, "\\1", "g", $1),0,max/4)
	               category = substr(gensub(/\s+> (.*)/, "\\1", "g", $2),0,max/8)
	               languages = substr(gensub(/\s+> (.*)/, "\\1", "g", $3),0,max/8)
	               countries = substr(gensub(/\s+> (.*)/, "\\1", "g", $4),0,70)
	               channelUrl = substr(gensub(/\s+> (.*)/, "\\1", "g", $5),0)
	               print name "\t|" category "\t|" languages "\t|" countries "\t" channelUrl
	              }' | column -t -s $'\t' \
)

_playvid() {
	printf '%s\n' "Fetching channel..."
	$hide mpv "${*##* }" --really-quiet --force-media-title="${*%%  *}"
	}
 
_detachplayer() {
 	printf '%s\n' "Fetching channel..."
 	{ setsid -f mpv "${*##* }" --really-quiet --force-media-title="${*%%  *}" & }
}
_onlyaudio() {
	printf '%s\n' "Fetching channel..."
	mpv "${*##* }" --no-video --really-quiet --force-media-title="${*%%  *}"
	}
_getlink() {
	echo "${*##* }"; notify-send "${*##* }"
	}

export -f _playvid
export -f _onlyaudio
export -f _getlink
export -f _detachplayer
SHELL="$(command -v bash)"		     
printf '%s\n' "${CHANNELS_LIST}" | $menu --with-nth="1..-2"\
           --bind "enter:execute(_playvid {})"\
           --bind "alt-a:execute(_onlyaudio {})"\
           --bind "alt-l:execute(_getlink {})"\
           --bind "alt-d:execute(_detachplayer {})"\
           --header="Select channel (press Escape to exit)" -q "${*:-}" 
