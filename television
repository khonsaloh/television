#!/usr/bin/env bash

dep_ck () {
	for dep in "$@"; do
		command -v "$dep" >/dev/null \
			|| { printf '%s\n' "$dep not found. Please install it."; exit 2; }
	done
}
dep_ck "fzf" "curl" "jq" "gawk" #basic dependencies with no flag passed

version=2.3.2
y="\033[1;33m"
re="\033[0m"
main_url="https://iptv-org.github.io/iptv/channels.json"
menu="fzf -e -i --reverse --cycle"

#environment variables
: "${TELE_CONFIG:=${XDG_CONFIG_HOME:-$HOME/.config}/television.conf}"

# allow custom variables in configuration file
[ -f "$TELE_CONFIG" ] && . "$TELE_CONFIG"

export favs_file=~/.cache/television_favs

#fzf bindings
: "${playvid:=enter}"
: "${detachplayer:=alt-d}"
: "${onlyaudio:=alt-a}"
: "${getlink:=alt-l}"
: "${favschan:=alt-f}"

help() {
printf '%s\n' "options for ${0##*/}:"
printf '%b\n' " ${y}-r${re}\\tfor radio"
printf '%b\n' " ${y}-d${re}\\tfor download the m3u file"
printf '%b\n' " ${y}-e${re}\\tfor channels focused on spanish language"
printf '%b\n' " ${y}-f${re}\\tto choose from favorites" 
printf '%b\n' " ${y}-E${re}\\tto edit the favorites file" #delete stuff principaly
printf '%b\n' " ${y}-u${re}\\tfor update this script" 
printf '%b\n' " ${y}-v${re}\\tfor print version" 
printf '%b\n' "\\nkeybinds"
printf '%b\n' " ${playvid}\\t for play video"
printf '%b\n' " ${detachplayer}\\t for detaching player"
printf '%b\n' " ${onlyaudio}\\t for play only audio"
printf '%b\n' " ${getlink}\\t for get link"
printf '%b\n' " ${favschan}\\t for adding channel to favorites "
}
update () {
	update="$(curl -s "https://raw.githubusercontent.com/khonsaloh/television/master/television" | diff -u "$0" -)"
	if [ -z "$update" ]; then
		printf "%s\n" "Script is up to date"
	else
		printf '%s\n' "$update" | patch "$0" - \
			&& printf "%s\n" "Script has been updated"
	fi
}
command -v _hide_win >/dev/null || _hide_win () {
		vent=$(xdotool getactivewindow 2>/dev/null) \
		&& xdotool windowunmap $vent 2>/dev/null
			"$@"
		xdotool windowmap $vent 2>/dev/null
}
export -f _hide_win
export hide=_hide_win

case $1 in
	-r)
		url=$(curl -Lsf  'https://www.tdtchannels.com/lists/radio.w3u' \
			| jq -r '.groups[].stations[] | "\(.name), \(.url)"')
		while [ "$url" ]; do
			selection=$(printf '%s\n' "$url" \
				| $menu --with-nth="1..-2" --prompt='radio: ')
			[ -z "$selection" ] && { tput cnorm 2>/dev/null; exit; }
			[ $TERMUX_VERSION ] && termux-open "${selection##* }" \
				|| { tput civis; echo "${selection%%,*}" \
				&& mpv "${selection##* }" --force-media-title="${selection%%  *}"; }
		done
		;;

	-d)
		url=$(curl -Lsf 'https://raw.githubusercontent.com/iptv-org/iptv/master/README.md' \
		| grep -oP '(?<=code>).*(?=</code)' \
		| $menu --prompt='television: ') \
		&& curl -sfL $url -O ;;

	-f)
		while [ -f $favs_file ]; do
		urls=$($menu --with-nth="1..-2" < $favs_file )
			[ -z "$urls" ] && exit \
				|| [ $TERMUX_VERSION ] && termux-open "${urls##* }" \
				|| $hide mpv "${urls##* }" --force-media-title="${urls%%  *}"
		done
		[ ! -f $favs_file ] && printf '%s\n' "you don't have any favorites yet"
		;;
	-E)
		 $EDITOR $favs_file
		 ;;
	-v)
		 printf '%b\n' "${0##*/} ${version}\\tpowered by https://github.com/khonsaloh/television"
		 ;;
	-e)
		url=$(curl -Lsf  'https://www.tdtchannels.com/lists/tv.w3u' \
			| jq -r '.groups[].stations[] | "\(.name), \(.url)"')
		while [ "$url" ]; do
			selection=$(printf '%s\n' "$url" \
				| $menu --with-nth="1..-2" --prompt='television: ')
			[ -z "$selection" ] && exit \
				|| $hide mpv "${selection##* }" --force-media-title="${selection%%,*}"
		done
		;;
	 -u)
		update
		;;

	*) [ $* ] && help ;;
esac

[ $* ] && exit

[ ! $TERMUX_VERSION ] && channel_file=/tmp/channel_file.json || { channel_file=$HOME/.cache/channel_file.json \
	&& [ -f $channel_file ] && [ $(($(date +%s) - $(date +%s -r $channel_file) )) -gt 90000 ] \
	&& curl "$main_url" -H "accept-encoding:gzip" --compressed -o $channel_file -sL; }
	 #write file to ram for better speed during the session

[ ! -f $channel_file ] && { curl "$main_url" -H "accept-encoding:gzip" --compressed -o $channel_file -sL \
	|| ( printf '%s\n' "it seems you don't have an internet conection" && kill $$) }

CHANNELS=$(jq -r '.[] | "\(.name) \t \(.categories[].name // "N/A") \t \(.languages|.[0].name // "N/A") \t \(.countries|.[0].name // "N/A") \t \(.url)"' $channel_file \
	                | gawk -v max="${COLUMNS:-80}" 'BEGIN { RS="\n"; FS=" \t " }
                    {
	               name = substr(gensub(/[0-9]+\.\s*(.*)/, "\\1", "g", $1),0,max/4)
	               category = substr(gensub(/\s+> (.*)/, "\\1", "g", $2),0,max/8)
	               languages = substr(gensub(/\s+> (.*)/, "\\1", "g", $3),0,max/8)
	               countries = substr(gensub(/\s+> (.*)/, "\\1", "g", $4),0,70)
	               channelUrl = substr(gensub(/\s+> (.*)/, "\\1", "g", $5),0)
	               print name "\t|" category "\t|" languages "\t|" countries "\t" channelUrl
	              }' | column -t -s $'\t')

command -v _playvid >/dev/null || _playvid() {
	printf '%s\n' "Fetching channel..."
	[ $TERMUX_VERSION ] && termux-open "${*##* }" \
		|| $hide mpv "${*##* }" --really-quiet --force-media-title="${*%%  *}"
	}

command -v _detachplayer >/dev/null || _detachplayer() {
 	printf '%s\n' "Fetching channel..."
 	{ setsid -f mpv "${*##* }" --really-quiet --force-media-title="${*%%  *}" & }
}
command -v _onlyaudio >/dev/null || _onlyaudio() {
	printf '%s\n' "Fetching channel..."
	tput civis; printf '%s\n' "${*%%  *}"
	mpv "${*##* }" --no-video --really-quiet --force-media-title="${*%%  *}"
	tput cnorm
	}

_getlink() {
	echo "${*##* }"; command -v notify-send >/dev/null && notify-send "${*##* }"
	}

_favchannels () {
	echo "$@" >> $favs_file
 }

export -f _playvid _onlyaudio _getlink _favchannels _detachplayer
SHELL="$(command -v bash)"
printf '%s\n' "${CHANNELS}" | $menu --with-nth="1..-2" \
	--bind "$playvid:execute(_playvid {})" \
	--bind "$onlyaudio:execute(_onlyaudio {})" \
	--bind "$getlink:execute(_getlink {})" \
	--bind "$detachplayer:execute(_detachplayer {})" \
	--bind "$favschan:execute(_favchannels {})" \
	--header="Select channel (press Escape to exit)" -q "${*:-}" 
