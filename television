#!/usr/bin/env bash

dep_ck () {
	for dep in "$@"; do
		command -v "$dep" >/dev/null \
			|| { printf '[0;31m%s [0m\n' "$dep not found. Please install it."; exit 2; }
	done
}
dep_ck "fzf" "curl" "jq" "gawk"

version=2.4.1
main_url="https://iptv-org.github.io/iptv/channels.json"
menu="fzf -e -i --layout=reverse --cycle --inline-info --border=${BORDER:-sharp}"

#environment variables
: "${TELE_CONFIG:=${XDG_CONFIG_HOME:-$HOME/.config}/television.conf}"

# allow custom variables in configuration file
[ -f "$TELE_CONFIG" ] && . "$TELE_CONFIG"

export favs_file=~/.cache/television_favs

#fzf bindings
: "${playvid:=enter}"
: "${detachplayer:=alt-d}"
: "${onlyaudio:=alt-a}"
: "${getlink:=alt-l}"
: "${favschan:=alt-f}"

help() {
  printf '%s\n' "options for ${0##*/}:"
  printf '\033[1;33m%s \033[0m \t%s \n' " -r" "for radio"
  printf '\033[1;33m%s \033[0m \t%s \n' " -d" "for download the m3u file"
  printf '\033[1;33m%s \033[0m \t%s \n' " -e" "for channels focused on spanish language"
  printf '\033[1;33m%s \033[0m \t%s \n' " -f" "to choose from favorites"
  printf '\033[1;33m%s \033[0m \t%s \n' " -E" "to edit the favorites file"
  printf '\033[1;33m%s \033[0m \t%s \n' " -u" "for update this script"
  printf '\033[1;33m%s \033[0m \t%s \n' " -v" "for print version"
  printf '%s\n' "keybinds"
  printf '%s\t%s\n' " ${playvid}" "for play video"
  printf '%s\t%s\n' " ${detachplayer}" "for detaching player"
  printf '%s\t%s\n' " ${onlyaudio}" "for play only audio"
  printf '%s\t%s\n' " ${getlink}" "for get link"
  printf '%s\t%s\n' " ${favschan}" "for adding channel to favorites "
}
_update () {
	update="$(curl -s "https://raw.githubusercontent.com/khonsaloh/television/master/television" | diff -u "$0" -)"
	if [ -z "$update" ]; then
		printf "%s\n" "Script is up to date"
	else
		printf '%s\n' "$update" | patch "$0" - \
			&& printf "%s\n" "Script has been updated"
	fi
}
command -v _hide_win >/dev/null || _hide_win () {
		vent=$(xdotool getactivewindow 2>/dev/null) \
		&& xdotool windowunmap $vent 2>/dev/null
			"$@"
		xdotool windowmap $vent 2>/dev/null
}
export -f _hide_win
export hide=_hide_win

case $1 in
	-r)
		url=$(curl -sl 'https://www.tdtchannels.com/lists/radio.json' \
      | jq -r '.countries[].ambits[].channels[] | "\(.name // "N/A") \t \(.options[].url // "N/A")"' )
		while [ "$url" ]; do
			selection=$(printf '%s\n' "$url" \
        | $menu --with-nth="1" -d'\t' --prompt='radio: ')
			[ -z "$selection" ] && { tput cnorm 2>/dev/null; exit; }
			[ $TERMUX_VERSION ] && termux-open "${selection##* }" \
				|| { tput civis; echo "${selection%% ht*}" \
				&& mpv "${selection##* }" --force-media-title="${selection%% ht*}"; }
		done
		;;

	-d)
		url=$(curl -Lsf 'https://raw.githubusercontent.com/iptv-org/iptv/master/README.md' \
		| grep -oP '(?<=code>).*(?=</code)' \
		| $menu --prompt='television: ') \
		&& curl -sfL $url -O ;;

	-f)
		while [ -f $favs_file ]; do
		urls=$($menu --with-nth="1..-2" < $favs_file )
			[ -z "$urls" ] && exit \
				|| [ $TERMUX_VERSION ] && termux-open "${urls##* }" \
				|| $hide mpv "${urls##* }" --force-media-title="${urls%%  *}"
		done
		[ ! -f $favs_file ] && printf '%s\n' "you don't have any favorites yet"
		;;
	-E)
    $EDITOR $favs_file 2>/dev/null || xdg-open $favs_file
    ;;
	-v)
		printf '%s\t%s\n' "${0##*/} ${version}" "powered by https://github.com/khonsaloh/television"
		 ;;
	-e)
		url=$(curl -Lsf  'https://www.tdtchannels.com/lists/tv.json' \
      | jq -r '.countries[].ambits[].channels[] | "\(.name // "N/A") \t \(.options[].url // "N/A")"' )
		while [ "$url" ]; do
			selection=$(printf '%s\n' "$url" \
				| $menu --delimiter="\t" --with-nth="1" --prompt='television: ')
			[ -z "$selection" ] && exit \
				|| $hide mpv "${selection##* }" --force-media-title="${selection%% htt*}"
		done
		;;
	 -u)
		_update
		;;

	*) [ $* ] && help ;;
esac

[ $* ] && exit

[ ! $TERMUX_VERSION ] && channel_file=/tmp/channel_file.json || { channel_file=$HOME/.cache/channel_file.json;
	[ -f $channel_file ] && [ $(($(date +%s) - $(date +%s -r $channel_file) )) -gt 90000 ] \
	&& curl "$main_url" -H "accept-encoding:gzip" --compressed -o $channel_file -sL; }
	 #write file to ram for better speed during the session

[ ! -f $channel_file ] && { curl "$main_url" -H "accept-encoding:gzip" --compressed -o $channel_file -sL \
	|| ( printf '%s\n' "it seems you don't have an internet conection" && kill $$) }

CHANNELS=$(jq -r '.[] | "\(.name) \t \(.categories[].name // "N/A") \t \(.languages|.[0].name // "N/A") \t \(.countries|.[0].name // "N/A") \t \(.url)"' $channel_file \
	                | gawk -v max="${COLUMN_SIZE:-80}" 'BEGIN { RS="\n"; FS=" \t " }
                    {
	               name = substr(gensub(/[0-9]+\.\s*(.*)/, "\\1", "g", $1),0,max/4)
	               category = substr(gensub(/\s+> (.*)/, "\\1", "g", $2),0,max/8)
	               languages = substr(gensub(/\s+> (.*)/, "\\1", "g", $3),0,max/8)
	               countries = substr(gensub(/\s+> (.*)/, "\\1", "g", $4),0,70)
	               channelUrl = substr(gensub(/\s+> (.*)/, "\\1", "g", $5),0)
	               print name "\t|" category "\t|" languages "\t|" countries "\t" channelUrl
	              }' | column -t -s $'\t')

command -v _playvid >/dev/null || _playvid() {
	printf '%s\n' "Fetching channel..."
	[ $TERMUX_VERSION ] && termux-open "${*##* }" \
		|| $hide mpv "${*##* }" --really-quiet --force-media-title="${*%%  *}"
	}

command -v _detachplayer >/dev/null || _detachplayer() {
 	printf '%s\n' "Fetching channel..."
 	{ setsid -f mpv "${*##* }" --really-quiet --force-media-title="${*%%  *}" & }
}
command -v _onlyaudio >/dev/null || _onlyaudio() {
	printf '%s\n' "Fetching channel..."
	tput civis; printf '%s\n' "${*%%  *}"
	mpv "${*##* }" --no-video --really-quiet --force-media-title="${*%%  *}"
	tput cnorm
	}

_getlink() {
	echo "${*##* }"; command -v notify-send >/dev/null && notify-send "${*##* }"
	}

_favchannels () {
	echo "$@" >> $favs_file
 }

_colorize() {
  local string
  string="${1//\[/\\033\[0;32m\[}"
  string="${string//\]/\]\\033\[0m}"
  printf '%b\n' "${string}"
}

HEADER_TV="$(_colorize "[${playvid}] Play channel [Escape] Exit
[${detachplayer^^}] Detach player [${onlyaudio^^}] Only audio [${getlink^^}] Get link")

"

export -f _playvid _onlyaudio _getlink _favchannels _detachplayer
SHELL="$(command -v bash)"
printf '%s\n' "${CHANNELS}" | $menu --with-nth="1..-2" \
	--bind "$playvid:execute(_playvid {})" \
	--bind "$onlyaudio:execute(_onlyaudio {})" \
	--bind "$getlink:execute(_getlink {})" \
	--bind "$detachplayer:execute(_detachplayer {})" \
	--bind "$favschan:execute(_favchannels {})" \
	--prompt "Search: " \
  --header="${HEADER_TV}" -q "${*:-}" 
