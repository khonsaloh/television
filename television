#!/usr/bin/env bash

dep_ck () {
	for dep in "$@"; do
		command -v "$dep" >/dev/null \
			|| { printf '%s\n' "$dep not found. Please install it."; exit 2; }
	done
}
dep_ck "fzf" "curl" "jq" "mpv" "gawk" #basic dependencies with no flag passed

y="\033[1;33m"
re="\033[0m"
main_url="https://iptv-org.github.io/iptv/channels.json"
menu="fzf -e -i --reverse --cycle"

#environment variables 
: "${TELE_CONFIG:=${XDG_CONFIG_HOME:-$HOME/.config}/television}"

# allow custom variables in configuration file
[ -f "$TELE_CONFIG" ] && . "$TELE_CONFIG"

# History=0
# hide_win=1

#fzf bindings
: "${playvid:=enter}"
: "${detachplayer:=alt-d}"
: "${onlyaudio:=alt-a}"
: "${getlink:=alt-l}"

help() {
printf '%s\n' "options for $0:"
printf '%b\n' " ${y}-r${re}\\tfor radio"
printf '%b\n' " ${y}-d${re}\\tfor download the m3u file"
printf '%b\n' " ${y}-e${re}\\tfor channels focused on spanish language"
printf '%b\n' " ${y}-u${re}\\tfor update this script" 
}
update () {
	update="$(curl -s "https://raw.githubusercontent.com/khonsaloh/television/master/television" | diff -u "$0" -)"
	if [ -z "$update" ]; then
		printf "%s\n" "Script is up to date"
	else
		printf '%s\n' "$update" | patch "$0" - \
			&& printf "%s\n" "Script has been updated"
	fi
}

hide_win () {
	vent=$(xdotool getactivewindow) \
		&& xdotool windowunmap $vent
	"$@"
	xdotool windowmap $vent
}

export -f hide_win
command -v xdotool >/dev/null && export hide=hide_win

case $1 in
	-r)
		url=$(curl -Lsf  'https://www.tdtchannels.com/lists/radio.w3u' \
			| jq -r '(.groups[].stations[] | [.name, .url]) | @csv')
		while :; do
			selection=$(printf '%s\n' "$url" | column -t -s',' | tr -d '"' \
				| $menu --with-nth="1..-2" --prompt='radio: ') || exit
			o_url=$(echo "$selection" | awk '{print $NF}')	
			echo $selection | awk -F'\t' '{print $1}'; mpv $o_url --force-media-title="${selection%%  *}"
		done
		;;
	
	-d) 
		url=$(curl -Lsf 'https://raw.githubusercontent.com/iptv-org/iptv/master/README.md' \
		| grep -o -P '(?<=code>).*(?=</code)' | sed 's/<.*//' \
		| $menu --prompt='television: ') \
		&& curl -sfL $url -O ;;
	
	-e)
		url=$(curl -Lsf  'https://www.tdtchannels.com/lists/tv.w3u' \
			| jq -r '(.groups[].stations[] | [.name, .url]) | @csv')
		while :; do
			selection=$(printf '%s\n' "$url" | column -t -s',' | tr -d '"' | grep '.m3u8$\|live$' \
				| $menu --with-nth="1..-2" --prompt='television: ')
			[ -z "$selection" ] && exit \
				|| $hide mpv "${selection##* }" --force-media-title="${selection%%  *}"
		done
		;;
	 -u) 
		update
		;;
	
	*) [ $* ] && help ;;
esac

[ $* ] && exit

CHANNELS_LIST=$(curl -sL "$main_url" \
	| jq -r '.[] | "\(.name) \t \(.categories[].name // "N/A") \t \(.languages|.[0].name // "N/A") \t \(.countries|.[0].name // "N/A") \t \(.url)"' \
	                | gawk -v max="${COLUMNS:-80}" 'BEGIN { RS="\n"; FS=" \t " }
                    {
	               name = substr(gensub(/[0-9]+\.\s*(.*)/, "\\1", "g", $1),0,max/4)
	               category = substr(gensub(/\s+> (.*)/, "\\1", "g", $2),0,max/8)
	               languages = substr(gensub(/\s+> (.*)/, "\\1", "g", $3),0,max/8)
	               countries = substr(gensub(/\s+> (.*)/, "\\1", "g", $4),0,70)
	               channelUrl = substr(gensub(/\s+> (.*)/, "\\1", "g", $5),0)
	               print name "\t|" category "\t|" languages "\t|" countries "\t" channelUrl
	              }' | column -t -s $'\t' \
)

_playvid() {
	printf '%s\n' "Fetching channel..."
	$hide mpv "${*##* }" --really-quiet --force-media-title="${*%%  *}"
	}
 
_detachplayer() {
 	printf '%s\n' "Fetching channel..."
 	{ setsid -f mpv "${*##* }" --really-quiet --force-media-title="${*%%  *}" & }
}
_onlyaudio() {
	printf '%s\n' "Fetching channel..."
	printf '%s\n' "${*%%  *}"
	mpv "${*##* }" --no-video --really-quiet --force-media-title="${*%%  *}"
	}
_getlink() {
	echo "${*##* }"; command -v notify-send >/dev/null && notify-send "${*##* }"
	}

export -f _playvid
export -f _onlyaudio
export -f _getlink
export -f _detachplayer
SHELL="$(command -v bash)"		     
printf '%s\n' "${CHANNELS_LIST}" | $menu --with-nth="1..-2" \
	--bind "$playvid:execute(_playvid {})" \
	--bind "$onlyaudio:execute(_onlyaudio {})" \
	--bind "$getlink:execute(_getlink {})" \
	--bind "$detachplayer:execute(_detachplayer {})" \
	--header="Select channel (press Escape to exit)" -q "${*:-}" 
